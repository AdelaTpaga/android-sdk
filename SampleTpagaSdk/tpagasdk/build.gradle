apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'tpagasdk'
    bintrayOrg = 'tpaga'
    versionName = "1.0.5"

    publishedGroupId = 'co.tpaga'
    libraryName = 'tpagasdk'
    artifact = 'tpagasdk'

    libraryDescription = 'Tpaga library for Android'

    libraryVersion = '1.0.5'

    developerId = 'leinaro'
    developerName = 'Adela Rojas'
    developerEmail = 'arojas@tpaga.co'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 5
        versionName "1.0.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // App's dependencies, including test
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile "com.google.guava:guava:18.0"

    //Scan credit card
    compile 'io.card:android-sdk:5.4.0'
    //Validate credit card
    compile files('libs/commons-validator-1.5.1.jar')

    compile('com.squareup.retrofit2:retrofit:2.1.0') {
        exclude module: 'okhttp'
        compile 'com.squareup.okhttp3:okhttp:3.4.1'
    }

    compile 'com.squareup.retrofit2:retrofit-mock:2.0.0-beta3'

    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'

    //material design
    compile 'com.weiwangcn.betterspinner:library-material:1.1.0'
    compile "com.android.support:design:24.2.1"

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
// Dependencies for local unit tests
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-all:2.0.2-beta"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.powermock:powermock-module-junit4:1.6.5"
    testCompile "org.powermock:powermock-api-mockito:1.6.5"

}

group = publishedGroupId

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
            }
        }
    }
}

version = libraryVersion

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    description "app javadocs"
    source = android.libraryVariants["release"].javaCompile.source
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath = files(android.libraryVariants["release"].javaCompile.classpath.files) + files(ext.androidJar)
    options.links("http://docs.oracle.com/javase/7/docs/api/");
    options.links("http://d.android.com/reference/");
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    // jFrog plugin must be declared for this line to work
    configurations = ['archives']
    // Package info for BinTray

    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = bintrayOrg
        desc = libraryDescription
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
//        vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'
        version {
            name = bintrayName
            desc = libraryDescription
            vcsTag = '1.0.5'
        }
    }
}